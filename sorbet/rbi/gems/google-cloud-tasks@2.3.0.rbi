# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `google-cloud-tasks` gem.
# Please instead update this file by running `bin/tapioca gem google-cloud-tasks`.

# source://google-cloud-tasks//lib/google/cloud/tasks/version.rb#20
module Google; end

# source://google-cloud-tasks//lib/google/cloud/tasks/version.rb#21
module Google::Cloud
  # source://google-cloud-pubsub/2.15.1/lib/google-cloud-pubsub.rb#63
  def pubsub(scope: T.unsafe(nil), timeout: T.unsafe(nil)); end

  class << self
    # source://google-cloud-core/1.6.0/lib/google/cloud.rb#158
    def auto_load_files; end

    # source://google-cloud-core/1.6.0/lib/google/cloud.rb#128
    def auto_load_gems; end

    # source://google-cloud-core/1.6.0/lib/google/cloud.rb#91
    def configure; end

    # source://google-cloud-env/1.6.0/lib/google/cloud/env.rb#490
    def env; end

    # source://google-cloud-core/1.6.0/lib/google/cloud.rb#103
    def init_configuration; end

    # source://google-cloud-core/1.6.0/lib/google/cloud.rb#142
    def loaded_files; end

    # source://google-cloud-core/1.6.0/lib/google/cloud.rb#62
    def new(project_id = T.unsafe(nil), credentials = T.unsafe(nil), retries: T.unsafe(nil), timeout: T.unsafe(nil)); end

    # source://google-cloud-pubsub/2.15.1/lib/google-cloud-pubsub.rb#102
    def pubsub(project_id = T.unsafe(nil), credentials = T.unsafe(nil), scope: T.unsafe(nil), timeout: T.unsafe(nil)); end
  end
end

# source://google-cloud-tasks//lib/google/cloud/tasks/version.rb#22
module Google::Cloud::Tasks
  class << self
    # Create a new client object for CloudTasks.
    #
    # By default, this returns an instance of
    # [Google::Cloud::Tasks::V2::CloudTasks::Client](https://googleapis.dev/ruby/google-cloud-tasks-v2/latest/Google/Cloud/Tasks/V2/CloudTasks/Client.html)
    # for version V2 of the API.
    # However, you can specify specify a different API version by passing it in the
    # `version` parameter. If the CloudTasks service is
    # supported by that API version, and the corresponding gem is available, the
    # appropriate versioned client will be returned.
    #
    # ## About CloudTasks
    #
    # Cloud Tasks allows developers to manage the execution of background
    # work in their applications.
    #
    # @param version [::String, ::Symbol] The API version to connect to. Optional.
    #   Defaults to `:v2`.
    # @return [CloudTasks::Client] A client object for the specified version.
    #
    # source://google-cloud-tasks//lib/google/cloud/tasks.rb#67
    def cloud_tasks(version: T.unsafe(nil), &block); end

    # Configure the google-cloud-tasks library.
    #
    # The following configuration parameters are supported:
    #
    # * `credentials` (*type:* `String, Hash, Google::Auth::Credentials`) -
    #   The path to the keyfile as a String, the contents of the keyfile as a
    #   Hash, or a Google::Auth::Credentials object.
    # * `lib_name` (*type:* `String`) -
    #   The library name as recorded in instrumentation and logging.
    # * `lib_version` (*type:* `String`) -
    #   The library version as recorded in instrumentation and logging.
    # * `interceptors` (*type:* `Array<GRPC::ClientInterceptor>`) -
    #   An array of interceptors that are run before calls are executed.
    # * `timeout` (*type:* `Numeric`) -
    #   Default timeout in seconds.
    # * `metadata` (*type:* `Hash{Symbol=>String}`) -
    #   Additional gRPC headers to be sent with the call.
    # * `retry_policy` (*type:* `Hash`) -
    #   The retry policy. The value is a hash with the following keys:
    #     * `:initial_delay` (*type:* `Numeric`) - The initial delay in seconds.
    #     * `:max_delay` (*type:* `Numeric`) - The max delay in seconds.
    #     * `:multiplier` (*type:* `Numeric`) - The incremental backoff multiplier.
    #     * `:retry_codes` (*type:* `Array<String>`) -
    #       The error codes that should trigger a retry.
    #
    # @return [::Google::Cloud::Config] The default configuration used by this library
    # @yield [::Google::Cloud.configure.tasks]
    #
    # source://google-cloud-tasks//lib/google/cloud/tasks.rb#106
    def configure; end
  end
end

# source://google-cloud-tasks//lib/google/cloud/tasks/version.rb#23
Google::Cloud::Tasks::VERSION = T.let(T.unsafe(nil), String)
