# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Google::Cloud::PubSub::V1::StreamingPullResponse::AcknowledgeConfirmation`.
# Please instead update this file by running `bin/tapioca dsl Google::Cloud::PubSub::V1::StreamingPullResponse::AcknowledgeConfirmation`.

class Google::Cloud::PubSub::V1::StreamingPullResponse::AcknowledgeConfirmation
  sig do
    params(
      ack_ids: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      invalid_ack_ids: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      temporary_failed_ack_ids: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      unordered_ack_ids: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String]))
    ).void
  end
  def initialize(ack_ids: Google::Protobuf::RepeatedField.new(:string), invalid_ack_ids: Google::Protobuf::RepeatedField.new(:string), temporary_failed_ack_ids: Google::Protobuf::RepeatedField.new(:string), unordered_ack_ids: Google::Protobuf::RepeatedField.new(:string)); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def ack_ids; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def ack_ids=(value); end

  sig { void }
  def clear_ack_ids; end

  sig { void }
  def clear_invalid_ack_ids; end

  sig { void }
  def clear_temporary_failed_ack_ids; end

  sig { void }
  def clear_unordered_ack_ids; end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def invalid_ack_ids; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def invalid_ack_ids=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def temporary_failed_ack_ids; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def temporary_failed_ack_ids=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def unordered_ack_ids; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def unordered_ack_ids=(value); end
end
