# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `twitter_oauth2` gem.
# Please instead update this file by running `bin/tapioca gem twitter_oauth2`.

# source://twitter_oauth2//lib/twitter_oauth2.rb#3
module TwitterOAuth2
  class << self
    # source://twitter_oauth2//lib/twitter_oauth2.rb#35
    def debug(&block); end

    # source://twitter_oauth2//lib/twitter_oauth2.rb#29
    def debug!; end

    # source://twitter_oauth2//lib/twitter_oauth2.rb#23
    def debugging=(boolean); end

    # @return [Boolean]
    #
    # source://twitter_oauth2//lib/twitter_oauth2.rb#20
    def debugging?; end

    # source://twitter_oauth2//lib/twitter_oauth2.rb#8
    def logger; end

    # source://twitter_oauth2//lib/twitter_oauth2.rb#11
    def logger=(logger); end
  end
end

# source://twitter_oauth2//lib/twitter_oauth2/client.rb#2
class TwitterOAuth2::Client < ::Rack::OAuth2::Client
  # @return [Client] a new instance of Client
  #
  # source://twitter_oauth2//lib/twitter_oauth2/client.rb#5
  def initialize(attributes); end

  # source://twitter_oauth2//lib/twitter_oauth2/client.rb#23
  def access_token!(*args); end

  # source://attr_required/1.0.1/lib/attr_optional.rb#21
  def authorization_endpoint; end

  # source://attr_required/1.0.1/lib/attr_optional.rb#21
  def authorization_endpoint=(_arg0); end

  # source://twitter_oauth2//lib/twitter_oauth2/client.rb#14
  def authorization_uri(params = T.unsafe(nil)); end

  # source://attr_required/1.0.1/lib/attr_optional.rb#21
  def certificate; end

  # source://attr_required/1.0.1/lib/attr_optional.rb#21
  def certificate=(_arg0); end

  # Returns the value of attribute code_challenge.
  #
  # source://twitter_oauth2//lib/twitter_oauth2/client.rb#3
  def code_challenge; end

  # Sets the attribute code_challenge
  #
  # @param value the value to set the attribute code_challenge to.
  #
  # source://twitter_oauth2//lib/twitter_oauth2/client.rb#3
  def code_challenge=(_arg0); end

  # Returns the value of attribute code_challenge_method.
  #
  # source://twitter_oauth2//lib/twitter_oauth2/client.rb#3
  def code_challenge_method; end

  # Sets the attribute code_challenge_method
  #
  # @param value the value to set the attribute code_challenge_method to.
  #
  # source://twitter_oauth2//lib/twitter_oauth2/client.rb#3
  def code_challenge_method=(_arg0); end

  # Returns the value of attribute code_verifier.
  #
  # source://twitter_oauth2//lib/twitter_oauth2/client.rb#3
  def code_verifier; end

  # Sets the attribute code_verifier
  #
  # @param value the value to set the attribute code_verifier to.
  #
  # source://twitter_oauth2//lib/twitter_oauth2/client.rb#3
  def code_verifier=(_arg0); end

  # source://attr_required/1.0.1/lib/attr_optional.rb#21
  def host; end

  # source://attr_required/1.0.1/lib/attr_optional.rb#21
  def host=(_arg0); end

  # source://attr_required/1.0.1/lib/attr_required.rb#23
  def identifier; end

  # source://attr_required/1.0.1/lib/attr_required.rb#23
  def identifier=(_arg0); end

  # source://attr_required/1.0.1/lib/attr_optional.rb#21
  def port; end

  # source://attr_required/1.0.1/lib/attr_optional.rb#21
  def port=(_arg0); end

  # source://attr_required/1.0.1/lib/attr_optional.rb#21
  def private_key; end

  # source://attr_required/1.0.1/lib/attr_optional.rb#21
  def private_key=(_arg0); end

  # source://attr_required/1.0.1/lib/attr_optional.rb#21
  def redirect_uri; end

  # source://attr_required/1.0.1/lib/attr_optional.rb#21
  def redirect_uri=(_arg0); end

  # source://attr_required/1.0.1/lib/attr_optional.rb#21
  def revocation_endpoint; end

  # source://attr_required/1.0.1/lib/attr_optional.rb#21
  def revocation_endpoint=(_arg0); end

  # source://attr_required/1.0.1/lib/attr_optional.rb#21
  def scheme; end

  # source://attr_required/1.0.1/lib/attr_optional.rb#21
  def scheme=(_arg0); end

  # source://attr_required/1.0.1/lib/attr_optional.rb#21
  def secret; end

  # source://attr_required/1.0.1/lib/attr_optional.rb#21
  def secret=(_arg0); end

  # Returns the value of attribute state.
  #
  # source://twitter_oauth2//lib/twitter_oauth2/client.rb#3
  def state; end

  # Sets the attribute state
  #
  # @param value the value to set the attribute state to.
  #
  # source://twitter_oauth2//lib/twitter_oauth2/client.rb#3
  def state=(_arg0); end

  # source://attr_required/1.0.1/lib/attr_optional.rb#21
  def token_endpoint; end

  # source://attr_required/1.0.1/lib/attr_optional.rb#21
  def token_endpoint=(_arg0); end

  private

  # source://twitter_oauth2//lib/twitter_oauth2/client.rb#38
  def authorization_session!; end
end

# source://twitter_oauth2//lib/twitter_oauth2.rb#4
TwitterOAuth2::VERSION = T.let(T.unsafe(nil), String)
