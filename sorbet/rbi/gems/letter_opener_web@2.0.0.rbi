# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `letter_opener_web` gem.
# Please instead update this file by running `bin/tapioca gem letter_opener_web`.

# source://letter_opener_web//lib/letter_opener_web/version.rb#3
module LetterOpenerWeb
  class << self
    # source://letter_opener_web//lib/letter_opener_web.rb#12
    def config; end

    # @yield [config]
    #
    # source://letter_opener_web//lib/letter_opener_web.rb#18
    def configure; end

    # source://railties/7.1.2/lib/rails/engine.rb#405
    def railtie_helpers_paths; end

    # source://railties/7.1.2/lib/rails/engine.rb#394
    def railtie_namespace; end

    # source://railties/7.1.2/lib/rails/engine.rb#409
    def railtie_routes_url_helpers(include_path_helpers = T.unsafe(nil)); end

    # source://letter_opener_web//lib/letter_opener_web.rb#22
    def reset!; end

    # source://railties/7.1.2/lib/rails/engine.rb#397
    def table_name_prefix; end

    # source://railties/7.1.2/lib/rails/engine.rb#401
    def use_relative_model_naming?; end
  end
end

class LetterOpenerWeb::ApplicationController < ::ActionController::Base
  private

  # source://actionview/7.1.2/lib/action_view/layouts.rb#330
  def _layout(lookup_context, formats); end

  class << self
    # source://activesupport/7.1.2/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://actionpack/7.1.2/lib/action_controller/metal.rb#262
    def middleware_stack; end
  end
end

# source://letter_opener_web//lib/letter_opener_web.rb#8
class LetterOpenerWeb::Config
  # Returns the value of attribute letters_location.
  #
  # source://letter_opener_web//lib/letter_opener_web.rb#9
  def letters_location; end

  # Sets the attribute letters_location
  #
  # @param value the value to set the attribute letters_location to.
  #
  # source://letter_opener_web//lib/letter_opener_web.rb#9
  def letters_location=(_arg0); end
end

# source://letter_opener_web//lib/letter_opener_web/delivery_method.rb#6
class LetterOpenerWeb::DeliveryMethod < ::LetterOpener::DeliveryMethod
  # source://letter_opener_web//lib/letter_opener_web/delivery_method.rb#7
  def deliver!(mail); end
end

# source://letter_opener_web//lib/letter_opener_web/engine.rb#7
class LetterOpenerWeb::Engine < ::Rails::Engine
  class << self
    # source://activesupport/7.1.2/lib/active_support/callbacks.rb#70
    def __callbacks; end
  end
end

class LetterOpenerWeb::Letter
  def initialize(params); end

  def attachments; end
  def default_style; end
  def delete; end
  def headers; end
  def id; end
  def plain_text; end
  def rich_text; end
  def sent_at; end
  def to_param; end
  def valid?; end

  private

  def adjust_link_targets(contents); end
  def base_dir; end
  def base_dir_within_letters_location?; end
  def exists?; end
  def fix_link_html(link_html); end
  def read_file(style); end
  def remove_attachments_link(headers); end
  def style_exists?(style); end

  class << self
    def destroy_all; end
    def find(id); end
    def letters_location; end
    def letters_location=(directory); end
    def search; end
  end
end

class LetterOpenerWeb::LettersController < ::LetterOpenerWeb::ApplicationController
  def attachment; end
  def clear; end
  def destroy; end
  def index; end
  def show; end

  private

  # source://actionview/7.1.2/lib/action_view/layouts.rb#330
  def _layout(lookup_context, formats); end

  def check_style; end
  def load_letter; end
  def routes; end

  class << self
    # source://activesupport/7.1.2/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://actionpack/7.1.2/lib/action_controller/metal.rb#262
    def middleware_stack; end
  end
end

# source://letter_opener_web//lib/letter_opener_web/version.rb#4
LetterOpenerWeb::VERSION = T.let(T.unsafe(nil), String)
