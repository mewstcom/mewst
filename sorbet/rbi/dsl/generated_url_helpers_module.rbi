# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GeneratedUrlHelpersModule`.
# Please instead update this file by running `bin/tapioca dsl GeneratedUrlHelpersModule`.

module GeneratedUrlHelpersModule
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes

  sig { params(args: T.untyped).returns(String) }
  def cdn_image_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def home_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def internal_api_follow_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def internal_api_following_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def internal_api_unfollow_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def post_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def post_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preview_view_component_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preview_view_components_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def profile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_direct_uploads_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_disk_service_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_properties_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_routes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_representation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_redirect_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def root_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_profile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sidekiq_web_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sign_in_phone_number_attempt_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sign_in_phone_number_new_attempt_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sign_in_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sign_out_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sign_up_phone_number_attempt_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sign_up_phone_number_new_attempt_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sign_up_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_rails_disk_service_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_list_url(*args); end
end
